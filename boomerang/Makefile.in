######################################################
# File: Makefile
# Desc: Makefile for boomerang
#       Makes and tests all object files all directories
#
######################################################

# $Revision: 1.85 $
# 23 Nov 04 - Mike: Added PPC files
# 20 Jul 04 - Mike: Removed BOOMDIR
# 21 Aug 02 - Icer: added codegen/chllcode.cpp to the build process
#		    by adding it in STATIC_OBJ
# 20 Aug 02 - Icer: removed test from all, test code is broken
#		    Added more to distclean
# 19 Aug 02 - Icer: changed make distclean delete toplevel makefile
#		    changed all: to read lib static test
# 31 May 02 - Mike: Make lib directory if needed
# 20 May 02 - Trent: Created
# 15 Jul 01 - Mike: Added static target

# Front end
MACHS     = sparc pentium ppc
MACH_LIBS = $(patsubst %, lib/libfront%.so, $(MACHS))
MACH_OBJS = $(patsubst %, frontend/%decoder.o, $(MACHS))
MACH_SRC  = $(patsubst %, frontend/%decoder.cpp, $(MACHS))
MACH_FE_SRC=$(patsubst %, frontend/%frontend.cpp, $(MACHS))
MACH_FE_OBJ=$(patsubst %, frontend/%frontend.o, $(MACHS))


C = gcc -g -Wall -O0
CXX = g++ -g -Wall -O0

# HOST_GNU_LD is "yes" if the linker on this host machine is GNU
HOST_GNU_LD = @HOST_GNU_LD@

# HOST_WINDOWS is true if the host OS is CygWin or MinGW
HOST_WINDOWS = @HOST_WINDOWS@

# LDL is -ldl if needed (Windows does not)
# EXEEXT is .exe for Windows
# DLLEXT is .dll for Windows and .so otherwise 
# RUNPATH is not needed on Windows 
ifeq ($(HOST_WINDOWS), yes)
LDL=
EXEEXT=.exe
DLLEXT=.dll
WININCLUDE=-Iwin32make/include
RUNPATH=
COPYDLL=libBinaryFile$(DLLEXT)
else # Non-Windows
LDL=-ldl
EXEEXT=
DLLEXT=.so
WININCLUDE=
COPYDLL=
endif

ifeq ($(HOST_GNU_LD), yes)
RUNPATH=-Wl,-rpath -Wl,"lib"
else # Assume Solaris
RUNPATH=-R"lib"
endif

# NOTE: "win32make/include" should be after "include" because if there
# is a generated include/config.h then we prefer to use that
CXXFLAGS=-Iinclude $(WININCLUDE)

BISONPP=@BISONPP@
FLEXPP=@FLEXPP@

LOADERS=ElfBinaryFile Win32BinaryFile ExeBinaryFile HpSomBinaryFile PalmBinaryFile BinaryFile
# LOADERDLLS is the set of DLL files
LOADERDLLS=$(patsubst %,lib/lib%$(DLLEXT),$(LOADERS)) $(COPYDLL)
# LOADERLIBS is the set of "-l" flags passed when linking executables against the DLLs
LOADERLIBS=$(patsubst %,-l%,$(LOADERS))

.PHONY: test clean all static
#19 Aug 02 icer: should read lib static test
#20 Aug 02 icer: should read lib static , the test code is broken
all: lib static 
static: boomerang$(EXEEXT)

# Make the lib directory if needed
lib:
	mkdir lib

testDyn: lib
	cd util     && ${MAKE} test
	cd loader   && ${MAKE} test
	cd db       && ${MAKE} test
	cd frontend && ${MAKE} test

test:	lib bigtest$(EXEEXT)
	cd loader   && ${MAKE} test
	./bigtest$(EXEEXT)

# In case you don't have bison++ and flex++ and don't need to mess with the
# parsers
remote:
	touch db/sslparser.cpp db/sslparser.h \
        c/ansi-c-parser.cpp c/ansi-c-scanner.cpp  \
        c/ansi-c-parser.h   c/ansi-c-scanner.h \
        db/sslscanner.cpp   db/sslscanner.h \
        transform/transformation-parser.cpp transform/transformation-scanner.cpp \
        transform/transformation-parser.h transform/transformation-scanner.h
# Also touch the decoders, since the user won't have the NJMC toolkit
	touch frontend/pentiumdecoder.cpp frontend/sparcdecoder.cpp frontend/ppcdecoder.cpp

clean:
	cd util     && ${MAKE} clean
	cd loader   && ${MAKE} clean
	cd db       && ${MAKE} clean
	cd frontend && ${MAKE} clean
	cd analysis && ${MAKE} clean
	cd transform && ${MAKE} clean
	rm -f *.o codegen/*.o log.o boomerang.o driver.o boomerang$(EXEEXT) bigtest$(EXEEXT) testAll.o c/*.o type/*.o

#20 Aug 02 icer
#added config.h config.log config.status and analysis/Makefile
distclean: clean
	rm -f Makefile util/Makefile loader/Makefile db/Makefile \
		frontend/Makefile include/config.h config.log \
		config.status analysis/Makefile

TEST_OBJS = util/UtilTest.o db/ExpTest.o db/ParserTest.o db/ProcTest.o db/ProgTest.o db/RtlTest.o \
	db/StatementTest.o db/CfgTest.o db/DfaTest.o \
	frontend/FrontSparcTest.o frontend/FrontPentTest.o \
	analysis/AnalysisTest.o loader/BinaryFileStub.o c/CTest.o type/TypeTest.o 

# Needed because the test header files are in all these different directories
INCLUDEALL = -Idb -Ifrontend -Ianalysis -Ic -Itype

UTIL_OBJS = 	  util/util.o
DB_OBJS = db/basicblock.o db/proc.o db/sslscanner.o db/cfg.o db/prog.o \
  db/table.o db/statement.o db/register.o db/sslparser.o db/exp.o db/rtl.o \
  db/sslinst.o db/insnameelem.o db/signature.o db/managed.o \
  c/ansi-c-parser.o c/ansi-c-scanner.o boomerang.o log.o db/visitor.o \
  db/xmlprogparser.o
TRANSFORM_OBJS = transform/rdi.o transform/transformer.o transform/generic.o \
  transform/transformation-parser.o transform/transformation-scanner.o
FRONT_OBJS = frontend/frontend.o frontend/njmcDecoder.o \
	frontend/sparcdecoder.o frontend/pentiumdecoder.o frontend/sparcfrontend.o \
	frontend/pentiumfrontend.o frontend/ppcdecoder.o frontend/ppcfrontend.o
AN_OBJS = analysis/analysis.o
CODEGEN = codegen/chllcode.o codegen/syntax.o
TYPEOBJS = type/constraint.o type/type.o type/dfa.o
LOADER_OBJS = loader/BinaryFileFactory.o
STATIC_OBJS = ${CODEGEN} ${UTIL_OBJS} ${DB_OBJS} ${TRANSFORM_OBJS} ${FRONT_OBJS} ${AN_OBJS} \
    ${TYPEOBJS} ${LOADER_OBJS}

$(LOADERDLLS): lib
	cd loader && make


boomerang$(EXEEXT): driver.o ${STATIC_OBJS} $(LOADERDLLS)
	$(CXX) -o $@ driver.o $(STATIC_OBJS) $(LOADERLIBS) $(RUNPATH) -Llib -lgc -lexpat $(LDL)

bigtest$(EXEEXT): testAll.o ${STATIC_OBJS} ${TEST_OBJS} $(LOADERDLLS)
	$(CXX) -o $@ testAll.o ${STATIC_OBJS} ${TEST_OBJS} $(LOADERLIBS) \
    $(RUNPATH) -Llib -lcppunit -lgc -lexpat $(LDL)


db/sslparser.cpp db/sslparser.h: db/sslparser.y db/sslscanner.l
	cd db ; ${BISONPP} -d -v -osslparser.cpp -hsslparser.h sslparser.y

db/sslscanner.cpp db/sslscanner.h: db/sslscanner.l db/sslparser.y
	cd db ; ${FLEXPP} -osslscanner.cpp -hsslscanner.h sslscanner.l

c/ansi-c-parser.cpp c/ansi-c-parser.h: c/ansi-c.y c/ansi-c.l
	cd c ; ${BISONPP} -d -v -oansi-c-parser.cpp -hansi-c-parser.h ansi-c.y

c/ansi-c-scanner.cpp c/ansi-c-scanner.h: c/ansi-c.l c/ansi-c.y
	cd c ; ${FLEXPP} -oansi-c-scanner.cpp -hansi-c-scanner.h ansi-c.l

transform/transformation-parser.cpp transform/transformation-parser.h: transform/transformation.y transform/transformation.l
	cd transform ; ${BISONPP} -d -v -otransformation-parser.cpp -htransformation-parser.h transformation.y

transform/transformation-scanner.cpp transform/transformation-scanner.h: transform/transformation.l transform/transformation.y
	cd transform ; ${FLEXPP} -otransformation-scanner.cpp -htransformation-scanner.h transformation.l

# The .cpp's depend on the .m's
$(MACH_SRC): frontend/%decoder.cpp : frontend/machine/%/core.spec \
                                   frontend/machine/%/synth.spec \
                                   frontend/machine/%/dis.spec \
                                   frontend/machine/%/decoder.m
	frontend/mltk.sh -o $@ $^ 2> mltk.err



#
# Extra flags
#
db/prog.o:					EXTRA = -Icodegen -Ic
frontend/frontend.o:		EXTRA = -Ic
analysis/AnalysisTest.o:	EXTRA = -Ifrontend
db/ProgTest.o:				EXTRA = -Ifrontend
db/ProcTest.o:				EXTRA = -Ifrontend
db/RtlTest.o:               EXTRA = -Ifrontend
db/StatementTest.o:			EXTRA = -Ifrontend
db/CfgTest.o:               EXTRA = -Ifrontend
type/TypeTest.o:            EXTRA = -Ifrontend

# Compile ordinary files
$(STATIC_OBJS): %.o : %.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $(EXTRA) $<

$(TEST_OBJS): %.o : %.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $(EXTRA) $<

driver.o: driver.cpp include/boomerang.h
	$(CXX) $(CXXFLAGS) -c -o $@ -Icodegen $(EXTRA) $<

testAll.o: testAll.cpp
	$(CXX) $(CXXFLAGS) -c -o $@ $(EXTRA) $< $(INCLUDEALL)

#
# Dependencies
#

db/exp.o: include/exp.h include/operator.h include/types.h include/statement.h \
    include/cfg.h include/rtl.h include/proc.h include/prog.h db/operstrings.h include/visitor.h include/type.h
db/prog.o: include/prog.h include/exp.h include/cfg.h include/proc.h include/rtl.h include/BinaryFile.h \
	include/frontend.h include/signature.h c/ansi-c-parser.h include/type.h
db/proc.o: include/proc.h include/hllcode.h include/statement.h include/exp.h include/cfg.h include/rtl.h \
	include/prog.h include/signature.h include/constraint.h include/type.h
db/cfg.o: include/cfg.h include/statement.h include/exp.h
db/basicblock.o: include/cfg.h include/hllcode.h include/statement.h \
    include/exp.h include/types.h include/rtl.h include/proc.h include/prog.h include/util.h
db/rtl.o: include/rtl.h include/exp.h include/operator.h include/statement.h \
    include/cfg.h include/proc.h include/prog.h include/boomerang.h
db/visitor.o: include/visitor.h include/exp.h include/statement.h
db/register.o: include/register.h
db/sslparser.o: db/sslparser.cpp db/sslparser.h db/sslscanner.h include/rtl.h \
    db/table.h db/insnameelem.h include/util.h include/statement.h include/exp.h
db/sslscanner.o: db/sslscanner.cpp db/sslscanner.h
db/xmlprogparser.o: db/xmlprogparser.cpp include/xmlprogparser.h include/rtl.h include/cluster.h include/proc.h \
	include/prog.h include/statement.h include/sigenum.h include/boomerang.h include/frontend.h
c/ansi-c-parser.o: c/ansi-c-parser.cpp c/ansi-c-parser.h c/ansi-c-scanner.h
c/ansi-c-scanner.o: c/ansi-c-scanner.cpp c/ansi-c-scanner.h
transform/transformation-parser.o: transform/transformation-parser.cpp transform/transformation-parser.h \
	transform/transformation-scanner.h
transform/transformation-scanner.o: transform/transformation-scanner.cpp transform/transformation-scanner.h
db/insnameelem.o: db/insnameelem.h
db/signature.o: include/signature.h include/frontend.h include/BinaryFile.h \
	include/exp.h include/proc.h include/prog.h include/type.h include/statement.h
db/statement.o: include/exp.h include/cfg.h include/statement.h include/proc.h include/prog.h include/visitor.h include/type.h
db/managed.o: include/managed.h include/statement.h include/exp.h
db/RtlTest.o: db/RtlTest.h include/exp.h include/rtl.h include/prog.h \
    include/proc.h include/statement.h include/BinaryFile.h
db/ExpTest.o: db/ExpTest.h include/exp.h include/operator.h
db/StatementTest.o: db/StatementTest.h include/exp.h include/statement.h include/operator.h include/BinaryFile.h
db/ParserTest.o: db/ParserTest.h db/sslparser.h include/prog.h include/operator.h
db/ProgTest.o: db/ProgTest.h include/prog.h include/BinaryFile.h
db/ProcTest.o: db/ProcTest.h include/proc.h include/BinaryFile.h
db/StaementTest.o: db/StaementTest.h include/statement.h
db/CfgTest.o: db/CfgTest.h include/statement.h include/exp.h include/BinaryFile.h
db/DfaTest.o: db/DfaTest.h include/type.h
db/table.o: include/types.h db/table.h include/statement.h include/exp.h include/statement.h
db/sslinst.o: include/statement.h include/exp.h include/rtl.h include/cfg.h include/proc.h include/prog.h \
	include/register.h include/type.h

transform/transformer.o: include/transformer.h transform/generic.h transform/rdi.h transform/transformation-parser.h
transform/generic.o: include/transformer.h transform/generic.h
transform/rdi.o: include/transformer.h transform/rdi.h

util/UtilTest.o: util/UtilTest.h include/util.h
util/util.o: include/util.h

frontend/frontend.o: frontend/frontend.cpp include/frontend.h include/decoder.h c/ansi-c-parser.h \
	include/boomerang.h include/proc.h include/exp.h include/prog.h include/signature.h include/cfg.h \
	include/BinaryFile.h
frontend/sparcfrontend.o: include/frontend.h include/boomerang.h
frontend/pentiumfrontend.o: include/frontend.h include/boomerang.h
frontend/FrontendTest.o: frontend/FrontendTest.h
frontend/FrontSparcTest.o: frontend/FrontSparcTest.h include/BinaryFile.h
frontend/FrontPentTest.o:  frontend/FrontPentTest.h include/BinaryFile.h
frontend/njmcDecoder.o: frontend/njmcDecoder.cpp include/decoder.h
frontend/pentiumdecoder.o: include/decoder.h include/rtl.h include/prog.h \
    include/exp.h include/proc.h include/statement.h
frontend/sparcdecoder.o: include/decoder.h include/rtl.h include/prog.h \
    include/exp.h include/proc.h include/statement.h include/BinaryFile.h

c/CTest.o:  c/ansi-c-parser.h
boomerang.o: include/boomerang.h include/prog.h include/BinaryFile.h \
    include/frontend.h include/transformer.h include/xmlprogparser.h

analysis/analysis.o: include/rtl.h include/cfg.h include/proc.h include/prog.h \
	include/frontend.h include/analysis.h include/exp.h
analysis/AnalysisTest.o: include/BinaryFile.h include/analysis.h include/prog.h include/proc.h \
	frontend/sparcfrontend.h analysis/AnalysisTest.h

codegen/chllcode.o: include/hllcode.h codegen/chllcode.h include/statement.h \
    include/cfg.h include/exp.h include/proc.h include/prog.h \
    include/signature.h include/type.h

codegen/syntax.o: include/hllcode.h include/statement.h \
    include/cfg.h include/exp.h include/proc.h

type/constraint.o: include/constraint.h include/exp.h include/type.h
type/type.o: include/type.h
type/dfa.o: include/type.h
type/TypeTest.o: type/TypeTest.h include/util.h include/type.h \
    include/constraint.h include/BinaryFile.h

include/statement.h: include/managed.h

loader/BinaryFileFactory.o: include/BinaryFile.h loader/ElfBinaryFile.h loader/Win32BinaryFile.h loader/ExeBinaryFile.h loader/HpSomBinaryFile.h loader/PalmBinaryFile.h

