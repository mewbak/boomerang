######################################################
# File: Makefile
# Desc: Makefile for boomerang
#       Makes and tests all object files all directories
#
######################################################

# $Revision: 1.34 $
# 21 Aug 02 - Icer: added codegen/chllcode.cpp to the build process
#		    by adding it in STATIC_OBJ
# 20 Aug 02 - Icer: removed test from all, test code is broken
#		    Added more to distclean
# 19 Aug 02 - Icer: changed make distclean delete toplevel makefile
#		    changed all: to read lib static test
# 20 May 02 - Trent: Created
# 31 May 02 - Mike: Make lib directory if needed
# 15 Jul 01 - Mike: Added static target

# Front end
MACHS     = sparc pentium
MACH_LIBS = $(patsubst %, lib/libfront%.so, $(MACHS))
MACH_OBJS = $(patsubst %, frontend/%decoder.o, $(MACHS))
MACH_SRC  = $(patsubst %, frontend/%decoder.cpp, $(MACHS))
MACH_FE_SRC=$(patsubst %, frontend/%frontend.cpp, $(MACHS))
MACH_FE_OBJ=$(patsubst %, frontend/%frontend.o, $(MACHS))


C = gcc -g -Wall
CC = g++ -g -Wall
CXX=$(CC)

# HOST_GNU_LD is true if the linker on this host machine is GNU
HOST_GNU_LD = @HOST_GNU_LD@

# These should be autoconfigured one day:
BISONPP=bison++
FLEXPP=flex++

BOOMDIR="$(shell pwd)"
BOOMSET=-DBOOMDIR=\"$(BOOMDIR)\"
LIBDIR=$(BOOMDIR)/lib
ifeq ($(HOST_GNU_LD), yes)
RUNPATH=-Wl,-rpath -Wl,$(LIBDIR)
else # Assume Solaris
RUNPATH=-R$(LIBDIR)
endif

.PHONY: test clean all static
#19 Aug 02 icer: should read lib static test
#20 Aug 02 icer: should read lib static , the test code is broken
all: lib static 
static: boomerang

# Make the lib directory if needed
lib:
	mkdir lib

testDyn: lib
	cd util     && ${MAKE} test
	cd loader   && ${MAKE} test
	cd db       && ${MAKE} test
	cd frontend && ${MAKE} test

test:	lib bigtest
	cd loader   && ${MAKE} test
	./bigtest

clean:
	cd util     && ${MAKE} clean
	cd loader   && ${MAKE} clean
	cd db       && ${MAKE} clean
	cd frontend && ${MAKE} clean
	cd analysis && ${MAKE} clean
	rm -f driver.o codegen/chllcode.o boomerang testAll.o c/*.o

#20 Aug 02 icer
#added config.h config.log config.status and analysis/Makefile
distclean: clean
	rm -f Makefile util/Makefile loader/Makefile db/Makefile \
		frontend/Makefile include/config.h config.log \
		config.status analysis/Makefile

TEST_OBJS = util/UtilTest.o db/ExpTest.o db/ParserTest.o \
	db/ProcTest.o db/ProgTest.o db/RtlTest.o db/TypeTest.o \
	db/DataflowTest.o \
	frontend/FrontSparcTest.o frontend/FrontPentTest.o \
	analysis/AnalysisTest.o loader/BinaryFileStub.o \
        c/CTest.o

# Needed because the test header files are in all these different directories
INCLUDEALL = -Idb -Ifrontend -Ianalysis -Ic

UTIL_OBJS = 	  util/util.o
DB_OBJS = db/basicblock.o db/proc.o db/sslscanner.o db/cfg.o db/prog.o \
  db/table.o db/dataflow.o db/register.o db/sslparser.o db/exp.o db/rtl.o \
  db/type.o db/hrtl.o db/sslinst.o db/insnameelem.o db/signature.o \
  c/ansi-c-parser.o c/ansi-c-scanner.o boomerang.o
FRONT_OBJS = frontend/frontend.o frontend/njmcDecoder.o \
	frontend/sparcdecoder.o frontend/pentiumdecoder.o frontend/sparcfrontend.o \
	frontend/pentiumfrontend.o frontend/switch.o
AN_OBJS = analysis/analysis.o
CODEGEN = codegen/chllcode.o
STATIC_OBJS = ${CODEGEN} ${UTIL_OBJS} ${DB_OBJS} ${FRONT_OBJS} ${AN_OBJS}

lib/libBinaryFile.so:
	cd loader && make

bigtest: testAll.o ${STATIC_OBJS} ${TEST_OBJS} lib/libBinaryFile.so
	$(CC) -o $@ testAll.o ${STATIC_OBJS} ${TEST_OBJS} lib/libBinaryFile.so \
	  $(RUNPATH) -Llib -ldl -lcppunit

boomerang: lib driver.o ${STATIC_OBJS} lib/libBinaryFile.so
	$(CC) -o $@ driver.o $(STATIC_OBJS) lib/libBinaryFile.so $(RUNPATH) \
	  -Llib -ldl

db/sslparser.cpp db/sslparser.h: db/sslparser.y db/sslscanner.l
	cd db ; ${BISONPP} -d -v -osslparser.cpp -hsslparser.h sslparser.y

db/sslscanner.cpp db/sslscanner.h: db/sslscanner.l db/sslparser.y
	cd db ; ${FLEXPP} -osslscanner.cpp -hsslscanner.h sslscanner.l

c/ansi-c-parser.cpp c/ansi-c-parser.h: c/ansi-c.y c/ansi-c.l
	cd c ; ${BISONPP} -d -v -oansi-c-parser.cpp -hansi-c-parser.h ansi-c.y

c/ansi-c-scanner.cpp c/ansi-c-scanner.h: c/ansi-c.l c/ansi-c.y
	cd c ; ${FLEXPP} -oansi-c-scanner.cpp -hansi-c-scanner.h ansi-c.l

# The .cpp's depend on the .m's
$(MACH_SRC): frontend/%decoder.cpp : frontend/machine/%/core.spec \
                                   frontend/machine/%/synth.spec \
                                   frontend/machine/%/dis.spec \
                                   frontend/machine/%/decoder.m
	frontend/mltk.sh -o $@ $^ 2> mltk.err



#
# Extra flags
#
db/prog.o:					EXTRA = $(BOOMSET) -Icodegen
frontend/frontend.o:		EXTRA = $(BOOMSET) -Ic
frontend/FrontSparcTest.o:	EXTRA = $(BOOMSET)
frontend/FrontPentTest.o:	EXTRA = $(BOOMSET)
analysis/AnalysisTest.o:	EXTRA = $(BOOMSET) -Ifrontend
c/CTest.o:	                EXTRA = $(BOOMSET)
db/ProgTest.o:				EXTRA = $(BOOMSET) -Ifrontend
db/ProcTest.o:				EXTRA = $(BOOMSET) -Ifrontend
db/ParserTest.o:			EXTRA = $(BOOMSET)
db/ExpTest.o:				EXTRA = $(BOOMSET)
db/RtlTest.o:               EXTRA = $(BOOMSET) -Ifrontend
db/DataflowTest.o:			EXTRA = $(BOOMSET) -Ifrontend

# Compile ordinary files
$(STATIC_OBJS): %.o : %.cpp
	$(CC) -c -o $@ -Iinclude $(EXTRA) $<

$(TEST_OBJS): %.o : %.cpp
	$(CC) -c -o $@ -Iinclude $(EXTRA) $<

driver.o: driver.cpp include/boomerang.h
	$(CC) -c -o $@ -Iinclude -Icodegen $(EXTRA) $<

testAll.o: testAll.cpp
	$(CC) -c -o $@ -Iinclude $(EXTRA) $< $(INCLUDEALL)

#
# Dependencies
#

db/exp.o: include/exp.h include/operator.h include/types.h include/dataflow.h \
    include/cfg.h include/rtl.h include/proc.h include/prog.h db/operstrings.h
db/prog.o: include/prog.h
db/proc.o: include/proc.h include/hllcode.h include/dataflow.h include/exp.h \
    include/cfg.h include/rtl.h include/prog.h include/signature.h
db/cfg.o: include/cfg.h include/dataflow.h include/exp.h
db/basicblock.o: include/cfg.h include/hllcode.h include/dataflow.h \
    include/exp.h include/types.h include/rtl.h include/proc.h include/prog.h \
    include/util.h
db/rtl.o: include/rtl.h include/exp.h include/operator.h
db/hrtl.o: include/rtl.h include/exp.h include/operator.h include/dataflow.h \
    include/cfg.h include/signature.h
db/register.o: include/register.h
db/sslparser.o: db/sslparser.cpp db/sslparser.h db/sslscanner.h
db/sslscanner.o: db/sslscanner.cpp db/sslscanner.h
c/ansi-c-parser.o: c/ansi-c-parser.cpp c/ansi-c-parser.h c/ansi-c-scanner.h
c/ansi-c-scanner.o: c/ansi-c-scanner.cpp c/ansi-c-scanner.h
db/insnameelem.o: db/insnameelem.h
db/signature.o: include/signature.h include/frontend.h include/BinaryFile.h \
	include/exp.h include/proc.h include/prog.h include/type.h \
    include/dataflow.h
db/dataflow.o: include/exp.h include/cfg.h include/dataflow.h include/proc.h
db/RtlTest.o: db/RtlTest.h include/exp.h include/rtl.h
db/ExpTest.o: db/ExpTest.h include/exp.h include/operator.h
db/ParserTest.o: db/ParserTest.h db/sslparser.h include/prog.h \
    include/operator.h
db/ProgTest.o: db/ProgTest.h include/prog.h
db/ProcTest.o: db/ProcTest.h include/proc.h
db/TypeTest.o: db/TypeTest.h include/util.h include/type.h
db/DataflowTest.o: db/DataflowTest.h include/dataflow.h

util/UtilTest.o: util/UtilTest.h include/util.h
util/util.o: include/util.h

frontend/frontend.o: frontend/frontend.cpp include/frontend.h \
	include/decoder.h c/ansi-c-parser.h include/boomerang.h
frontend/sparcfrontend.o: include/frontend.h include/boomerang.h
frontend/pentiumfrontend.o: include/frontend.h include/boomerang.h
frontend/FrontendTest.o: frontend/FrontendTest.h
frontend/FrontSparcTest.o: frontend/FrontSparcTest.h
frontend/FrontPentTest.o:  frontend/FrontPentTest.h
frontend/njmcDecoder.o: frontend/njmcDecoder.cpp include/decoder.h
frontend/switch.o: include/exp.h include/operator.h

c/CTest.o:  c/ansi-c-parser.h
boomerang.o: include/boomerang.h include/prog.h include/BinaryFile.h include/frontend.h
analysis/analysis.o: include/rtl.h include/cfg.h include/proc.h include/prog.h \
	include/frontend.h include/analysis.h include/exp.h

codegen/chllcode.o: include/hllcode.h codegen/chllcode.h

