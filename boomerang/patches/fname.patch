Subject: Bug fix - saving const char *fname form temporary std:string

For my compiler it is just wrong to save a pointer 
to temporary std:string buffer and use the pointer saved
after the original std:string's gone.

Changed: type of fname from (const char *) to (std:string)

From : Anatoli Koutsevol <Anatoli.Koutsevol@MarkovProcesses.com>

Index: db/prog.cpp
===================================================================
RCS file: /cvsroot/boomerang/boomerang/db/prog.cpp,v
retrieving revision 1.87
diff -u -r1.87 prog.cpp
--- db/prog.cpp	20 Jan 2004 02:47:55 -0000	1.87
+++ db/prog.cpp	1 Feb 2004 00:58:36 -0000
@@ -890,10 +890,10 @@
 }
 
 void Prog::printCallGraph() {
-    const char *fname = (Boomerang::get()->getOutputPath() +    
-                         "callgraph.out").c_str();
-    int fd = lockFileWrite(fname);
-    std::ofstream f(fname);
+    std::string fname = Boomerang::get()->getOutputPath() 
+                        + "callgraph.out";
+    int fd = lockFileWrite(fname.c_str());
+    std::ofstream f(fname.c_str());
     std::set<Proc*> seen;
     std::map<Proc*, int> spaces;
     std::map<Proc*, Proc*> parent;
@@ -937,10 +937,10 @@
     for (std::list<Proc*>::iterator it = m_procs.begin(); it != m_procs.end();
          it++)
         (*it)->clearVisited();
-    const char *fname = (Boomerang::get()->getOutputPath() +    
-                         "callgraph.xml").c_str();
-    int fd = lockFileWrite(fname);
-    std::ofstream f(fname);
+    std::string fname = Boomerang::get()->getOutputPath()
+                        + "callgraph.xml";
+    int fd = lockFileWrite(fname.c_str());
+    std::ofstream f(fname.c_str());
     f << "<prog name=\"" << getName() << "\">\n";
     f << "   <callgraph>\n";
     Proc *entry = getEntryProc();
